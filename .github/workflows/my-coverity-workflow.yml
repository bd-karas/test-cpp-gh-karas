name: GitHub My Coverity Workflow
# Use this YAML in your workflow file for each job
# Example: https://documentation.blackduck.com/ja-JP/bundle/bridge/page/documentation/c_github-coverity.html


on: 
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  run-on-self-hosted:
    # runs-on: [ ubuntu-latest ]
    runs-on: self-hosted
        
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Show current working directory
        run: |
          pwd

      - name: Coverity Scan
        uses: blackduck-inc/black-duck-security-scan@v2
        with:
          ### SCANNING: Required fields
          coverity_url: ${{ vars.COVERITY_URL }}
          coverity_user: ${{ secrets.COVERITY_USER }}
          coverity_passphrase: ${{ secrets.COVERITY_PASSPHRASE }}
          coverity_project_name: ${{ github.event.repository.name }}
          coverity_stream_name: ${{ github.event.repository.name }}-${{ github.ref_name }}    

          ### PULL REQUEST COMMENTS:
          coverity_prComment_enabled: true
          github_token: ${{ secrets.GITHUB_TOKEN }} # Required when PR comments is enabled
          
          ### Arbitrary product-related CL arguments
          coverity_build_command: g++ test.cpp
          # coverity_clean_command: mvn clean
          # coverity_config_path: /Users/Config/coverity.yml
          # coverity_args: -c /Users/Config/coverity.yml -o capture.build.clean-command="mvn clean" -- mvn clean install
        
          # project_directory: ${{ vars.PROJECT_DIRECTORY }}
        
          ### Coverity Connect users - Uncomment below
          coverity_local: true
          
          ### POLICY ENFORCEMENT: Uncomment to break build on policy
          # coverity_policy_view: 'Outstanding Issues' 
          
          ### Uncomment below configuration if Bridge diagnostic files needs to be uploaded
          # include_diagnostics: true 
          
          ### Mark build status if policy violating issues are found
          # mark_build_status: 'success'
                                      
          ### Mark build status if policy violating issues are found
          # mark_build_status: 'success'
